name: CI1 - Test & Security Scan

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  test-and-scan:
    runs-on: ubuntu-latest

    steps:
      - name: 🧩 Checkout code
        uses: actions/checkout@v4

      - name: 🐍 Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: ♻️ Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # -------------------------------
      # 1️⃣ 冒烟测试
      # -------------------------------
      - name: 🧪 Run Smoke Tests
        working-directory: ./app
        run: |
          pip install -r requirements.txt
          pip install pytest httpx
          pytest -v --maxfail=1 --disable-warnings --tb=short

      # -------------------------------
      # 2️⃣ Python 静态漏洞扫描
      # -------------------------------
      - name: 🔎 Run Bandit (Python SAST)
        run: |
          pip install bandit
          bandit -r app -ll -ii -f json -o bandit.json
        continue-on-error: false

      - name: 📎 Upload Bandit Report
        uses: actions/upload-artifact@v4
        with:
          name: bandit-report
          path: bandit.json

      # -------------------------------
      # 3️⃣ 依赖漏洞扫描（柔性模式）
      # -------------------------------
      - name: 🧰 Run pip-audit (Dependencies)
        run: |
          pip install pip-audit jq
          pip-audit -r app/requirements.txt --format json --output pip-audit.json || true

      - name: 📎 Upload pip-audit Report
        uses: actions/upload-artifact@v4
        with:
          name: pip-audit-report
          path: pip-audit.json

      - name: 📊 Summarize pip-audit Results
        run: |
          echo "### 🧰 Pip-audit 依赖扫描结果" >> $GITHUB_STEP_SUMMARY
          COUNT=$(jq 'length' pip-audit.json)
          if [ "$COUNT" -eq 0 ]; then
            echo "✅ 未发现已知漏洞" >> $GITHUB_STEP_SUMMARY
          else
            echo "⚠️ 发现 $COUNT 个依赖存在已知漏洞：" >> $GITHUB_STEP_SUMMARY
            jq -r '
              .[] |
              "- \(.name // .dependency.name) (\(.version // .dependency.version)) → 漏洞数: \(.vulns | length)"
            ' pip-audit.json >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "🗂️ 详细报告已上传为 artifact：pip-audit-report" >> $GITHUB_STEP_SUMMARY
          fi
        continue-on-error: true

      # -------------------------------
      # 4️⃣ 密钥扫描（更新版）
      # -------------------------------
      - name: 🔐 Gitleaks (Secret Scan)
        uses: gitleaks/gitleaks-action@v2
        with:
          config-path: .gitleaks.toml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true


      # -------------------------------
      # 5️⃣ Dockerfile 检查（不阻断）
      # -------------------------------
      - name: 🧱 Hadolint (Dockerfile Lint)
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: app/Dockerfile
        continue-on-error: true

